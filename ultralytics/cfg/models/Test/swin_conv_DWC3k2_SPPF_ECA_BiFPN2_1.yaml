nc: 2
scales:
  s: [0.33, 0.25, 1024] #[depth, width, max_channels] Not on swin, ECA
  
backbone:
  - [-1, 1, nn.Identity, []] #0   [3, 640, 640] → scaled: [3, 640, 640]
  
  # Swin track
  - [0, 1, TorchVision, [768, swin_t, DEFAULT, True, 4, True]] #1   
  - [-1, 1, Index, [192, 4]] #2   [192, 80, 80] → scaled: [192, 80, 80]
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #3  multiscale 1   [192, 80, 80] → scaled: [192, 80, 80]
  - [1, 1, Index, [384, 6]] #4   [384, 40, 40] → scaled: [384, 40, 40]
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #5 multiscale 2   [384, 40, 40] → scaled: [384, 40, 40]
  - [1, 1, Index, [768, 9]] #6   [768, 20, 20] → scaled: [768, 20, 20]
  - [-1, 1, torchvision.ops.Permute, [[0, 3, 1, 2]]] #7   [768, 20, 20] → scaled: [768, 20, 20]
  - [-1, 1, SPPF, [768, 5]] #8 multiscale 3   [768, 20, 20] → scaled: [192, 20, 20]
  
    # CNN
  - [0, 1, Conv, [64, 3, 2]] #9   [64, 320, 320] → scaled: [16, 320, 320]
  - [-1, 1, Conv, [128, 3, 2]] #10   [128, 160, 160] → scaled: [32, 160, 160]
  - [-1, 2, DWC3k2, [256, False, 0.25]] #11   [256, 160, 160] → scaled: [64, 160, 160]
  - [-1, 1, Conv, [256, 3, 2]] #12 multiscale 1   [256, 80, 80] → scaled: [64, 80, 80]
  - [-1, 2, DWC3k2, [512, False, 0.25]] #13   [512, 80, 80] → scaled: [128, 80, 80]
  - [-1, 1, Conv, [512, 3, 2]] #14   [512, 40, 40] → scaled: [128, 40, 40]
  - [-1, 2, DWC3k2, [512, True]] #15   [512, 40, 40] → scaled: [128, 40, 40]
  - [-1, 1, Conv, [1024, 3, 2]] #16   [1024, 20, 20] → scaled: [256, 20, 20]
  - [-1, 2, DWC3k2, [1024, True]] #17   [1024, 20, 20] → scaled: [256, 20, 20]
  - [-1, 1, SPPF, [1024, 5]] #18 multiscale 3   [1024, 20, 20] → scaled: [256, 20, 20]
  
  #Concat
  - [[3, 12], 1, Concat, [1]] #19   [448, 80, 80] → scaled: [256, 80, 80]
  - [-1, 1, ECA, []] #20   [448, 80, 80] → scaled: [256, 80, 80]
  
  - [[5, 15], 1, Concat, [1]] #21   [896, 40, 40] → scaled: [512, 40, 40]
  - [-1, 1, ECA, []] #22   [896, 40, 40] → scaled: [512, 40, 40]
  
  - [[8, 18], 1, Concat, [1]] #23   [1792, 20, 20] → scaled: [448, 20, 20]
  - [-1, 1, ECA, []] #24   [1792, 20, 20] → scaled: [448, 20, 20]

head:
#BiFPN BLOCK 1
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #25   [1792, 40, 40] → scaled: [448, 40, 40]
  - [[-1, 22], 1, BiFPN_Concat2, [1]] #26   [2688, 40, 40] → scaled: [960, 40, 40]
  - [-1, 3, DWC3k2, [512]] #27   [512, 40, 40] → scaled: [128, 40, 40]
  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #28   [512, 80, 80] → scaled: [128, 80, 80]
  - [[-1, 20], 1, BiFPN_Concat2, [1]] #29   [960, 80, 80] → scaled: [384, 80, 80]
  - [-1, 3, DWC3k2, [256]] #30   [256, 80, 80] → scaled: [64, 80, 80]
  
  - [-1, 1, nn.Upsample, [None, 0.5, "nearest"]] #31   [256, 40, 40] → scaled: [64, 40, 40]
  - [[-1, 27, 22], 1, BiFPN_Concat3, [1]] #32   [1664, 40, 40] → scaled: [704, 40, 40]
  - [-1, 3, DWC3k2, [512, True]] #33   [512, 40, 40] → scaled: [128, 40, 40]
  
  - [-1, 1, nn.Upsample, [None, 0.5, "nearest"]] #34   [512, 20, 20] → scaled: [128, 20, 20]
  - [[-1, 24], 1, BiFPN_Concat2, [1]] #35   [2304, 20, 20] → scaled: [576, 20, 20]
  - [-1, 3, DWC3k2, [1024, True]] #36   [1024, 20, 20] → scaled: [256, 20, 20]

#BiFPN Block 2
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #37   [1024, 40, 40] → scaled: [256, 40, 40]
  - [[-1, 33], 1, BiFPN_Concat2, [1]] #38   [1536, 40, 40] → scaled: [384, 40, 40]
  - [-1, 3, DWC3k2, [512]] #39   [512, 40, 40] → scaled: [128, 40, 40]
  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #40   [512, 80, 80] → scaled: [128, 80, 80]
  - [[-1, 30], 1, BiFPN_Concat2, [1]] #41   [768, 80, 80] → scaled: [192, 80, 80]
  - [-1, 3, DWC3k2, [256]] #42   [256, 80, 80] → scaled: [64, 80, 80]
  
  - [-1, 1, nn.Upsample, [None, 0.5, "nearest"]] #43   [256, 40, 40] → scaled: [64, 40, 40]
  - [[-1, 39, 33], 1, BiFPN_Concat3, [1]] #44   [1280, 40, 40] → scaled: [320, 40, 40]
  - [-1, 3, DWC3k2, [512, True]] #45   [512, 40, 40] → scaled: [128, 40, 40]
  
  - [-1, 1, nn.Upsample, [None, 0.5, "nearest"]] #46   [512, 20, 20] → scaled: [128, 20, 20]
  - [[-1, 36], 1, BiFPN_Concat2, [1]] #47   [1536, 20, 20] → scaled: [384, 20, 20]
  - [-1, 3, DWC3k2, [1024, True]] #48   [1024, 20, 20] → scaled: [256, 20, 20]

#BiFPN Block 3
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #49   [1024, 40, 40] → scaled: [256, 40, 40]
  - [[-1, 45], 1, BiFPN_Concat2, [1]] #50   [1536, 40, 40] → scaled: [384, 40, 40]
  - [-1, 3, DWC3k2, [512]] #51   [512, 40, 40] → scaled: [128, 40, 40]

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #52   [512, 80, 80] → scaled: [128, 80, 80]
  - [[-1, 42], 1, BiFPN_Concat2, [1]] #53   [768, 80, 80] → scaled: [192, 80, 80]
  - [-1, 3, DWC3k2, [256]] #54   [256, 80, 80] → scaled: [64, 80, 80]
  
  - [-1, 1, nn.Upsample, [None, 0.5, "nearest"]] #55   [256, 40, 40] → scaled: [64, 40, 40]
  - [[-1, 51, 45], 1, BiFPN_Concat3, [1]] #56   [1280, 40, 40] → scaled: [320, 40, 40]
  - [-1, 3, DWC3k2, [512, True]] #57   [512, 40, 40] → scaled: [128, 40, 40]
  
  - [-1, 1, nn.Upsample, [None, 0.5, "nearest"]] #58   [512, 20, 20] → scaled: [128, 20, 20]
  - [[-1, 48], 1, BiFPN_Concat2, [1]] #59   [1536, 20, 20] → scaled: [384, 20, 20]
  - [-1, 3, DWC3k2, [1024, True]] #60   [1024, 20, 20] → scaled: [256, 20, 20]
  
  - [[54, 57, 60], 1, Detect, [nc]] #61   Detection outputs
